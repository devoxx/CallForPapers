# CFP for DevoxxMA
# Configuration file
# -------------------------------------------------------------------------------------
#
# All environment variables are set from the CleverCloud console for Production
# For local development, create a simple env.sh that will configure all variables.
# See run.sh.sample
#
# -------------------------------------------------------------------------------------
#
# Do not edit this file - use run.sh
#
application.secret="changeme"
cfp.hostname="cfp.devoxx.ma"
application.langs="en,en-US,fr,fr-FR"
logger.root=ERROR
logger.play=INFO
logger.application=DEBUG

smtp.host="mail.smtp2go.com"
smtp.user="amine-hakkou"
smtp.password="hadamotdepasse"
smtp.port=2525
#smtp.host="mail.devoxx.ma"
#smtp.user="program@devoxx.ma"
#smtp.password="XUQVlT8[fnP2x"
#smtp.ssl="no"
#smtp.port="8025"
#smtp.mock="yes"


mail.from="redamkarrem@gmail.com"
mail.committee.email="redamkarrem@gmail.com"
#mail.bcc="info@devoxx.ma"
#mail.bugreport.recipient="info@devoxx.ma"


# Github staging
github.client_id="28ed684ba4cd6769d495"
github.client_secret="a441fef811378122eb8ef98613f6ad50c1c50fb5"

#google.client_id="144069972892-84jmcicm5ucqmk983t6449hirm8umnvf.apps.googleusercontent.com"
#google.client_secret="GMaMVXkcI45SvDJuhrvpsjkQ"
//google.client_id="1097756620057-7dkj548uisns5s0u88f1fprdh7v3oqhb.apps.googleusercontent.com"
//google.client_secret="AN8HP1MyMIX0ciKSOscNvXeR"
google.client_id=${GOOGLE_ID}
google.client_secret=${GOOGLE_SECRET}

linkedin.client_id="78bawh6otne47i"
linkedin.client_secret="Db0CuAY2HEwhz6BO"

# Redis hosted on my server
# DO NOT USE the PROD server in Dev mode
#redis.host=${REDIS_HOST}
redis.host="127.0.0.1"
redis.host=${?REDIS_HOST}
redis.port=${REDIS_PORT}
#redis.port=6379
redis.timeout=30000
redis.database=1
#redis.password="C7_%g8rWtkkL-uzNuZ=A=Ss+X9?vwx!9uj+h^3P?"


actor.cronUpdater.active=true
actor.draftReminder.days=2


# CleverCloud prod
#elasticsearch.host="https://s8isv9eza0:3x9xi5qgjf@faicals-first-starte-9654500285.eu-west-1.bonsai.io"
#elasticsearch.username="faissal@moroccojug.org"
#elasticsearch.password="//#08999123"

elasticsearch.host="https://s8isv9eza0:3x9xi5qgjf@faicals-first-starte-9654500285.eu-west-1.bonsai.io"
elasticsearch.username="elasticsearch"
elasticsearch.password="BRPukVwJRMOdHw1qXf6AUg"

stats-context {
  fork-join-executor {
    parallelism-factor = 4.0
    parallelism-max = 32
  }
}

elasticsearch-context {
  fork-join-executor {
    parallelism-factor = 4.0
    parallelism-max = 32
  }
}

# Disable SNI so that Java does not catch SSL related warnings and throw exceptions, causing unrecognized_name error
jsse.enableSNIExtension=false

play {
  akka {
    event-handlers = ["akka.event.Logging$DefaultLogger", "akka.event.slf4j.Slf4jEventHandler"]
    loglevel = DEBUG
    log-config-on-start = off

    actor {
      default-dispatcher = {
        fork-join-executor {
          # Min number of threads to cap factor-based parallelism number to
          parallelism-min = 8

          # The parallelism factor is used to determine thread pool size using the
          # following formula: ceil(available processors * factor). Resulting size
          # is then bounded by the parallelism-min and parallelism-max values.
          parallelism-factor = 3.0

          # Max number of threads to cap factor-based parallelism number to
          parallelism-max = 64
        }
      }
    }
  }
}

# Set to false will close the CFP for speakers
cfp.isOpen=true



akka.jvm-exit-on-fatal-error=false

# For AngularJS schedule application
cfp.activateFavorites= true
# If the post is too small you won't be able to save your schedule updates
parsers.MultipartFormData.maxLength=10240K
parsers.json.maxLength=1M
parsers.text.maxLength=1M

ws.useragent="Play2 Scala WS for Devoxx"

akka.log-dead-letters-during-shutdown=false

#bitbucket.issues.url=${BITBUCKET_URL}
#bitbucket.username=${BITBUCKET_USERNAME}
#bitbucket.password=${BITBUCKET_PASSWORD}

# If you want to use OpsGenie for monitoring
#opsgenie.apiKey=${OPSGENIE_API}
#opsgenie.name=${OPSGENIE_NAME}

# Set to true if you want to show Golden Ticket votes in the show vote view
#goldenTicket.active=false

# Set to true if you have HTTPS enabled
cfp.activateHTTPS=false
cfp.tags.active=false
# For SSL suppoer
trustxforwarded=true

#cfp.imageBase="/Applications/XAMPP/xamppfiles/htdocs/imageBase/"
#cfp.imageData.hostname="http://localhost/imageBase/"
cfp.imageBase="storage"
cfp.imageBase=${?STORAGE_LOCATION}
cfp.imageData.hostname="/profilePicture/"
cfp.imageData.hostname=${?STORAGE_API}
cfp.TrustedRequestToken="SDFSFS?FSK!FSFK54654sfSFSf?QSDejeb"


# Activate or not the "Favorites / MySchedule" system on the CFP
cfp.activateFavorites=${ACTIVATE_FAVORITES}

# Bucket name that stores static HTML pages from previous edition
# For prod on Clever-cloud it should be /app
# For dev it's a local folder on your system with HTML pages. It can be empty.
bucket.rootFolder=${BUCKET_ROOTFOLDER}

# open or close the votes for talks from mobile app
mobile.vote.isActive=${ACTIVATE_VOTE}

# Email Digest
# Daily is a 24h time setting, for example "08:00" or "17:00"
digest.daily=${DIGEST_DAILY}
# Set to true if you have HTTPS enabled
cfp.activateHTTPS=${ACTIVATE_HTTPS}

# AWS Credentials
aws.key=${AWS_KEY}
aws.secret=${AWS_SECRET}
aws.region=${AWS_REGION}

# Reset all votes when a DRAFT or SUBMITTED talk is updated
cfp.resetVotesForSubmitted=${CFP_RESET_VOTES_SUBMITTED}

# Push emails on new new proposals to program committee
email.on.new.proposal=${EMAIL_NEW_PROPOSALS}

# Conference Timezone
conference.timezone=${CONFERENCE_TIMEZONE}

capgemini.username=${CAPGEMINI_USERNAME}
capgemini.password=${CAPGEMINI_PASSWORD}

gluon.authorization=${GLUON_AUTHORIZATION}
gluon.username=${GLUON_USERNAME}
gluon.password=${GLUON_PASSWORD}

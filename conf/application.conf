# CFP for Devoxx
# Configuration file
# -------------------------------------------------------------------------------------
#

# -------------------------------------------------------------------------------------
# You need
# 1. a valid Mailjet account
# 2. a Github client API key
# 3. a Google OpenID https://cloud.google.com/console#/project with 2 URL, one for cfp.devoxx.fr and one for localhost
# 4. a Redis 2.6.x server, protected with a password
# 5. an ElasticSearch server
# 6. a Trello account
# -------------------------------------------------------------------------------------
# Never ever change the secret, because it's used to generate Speaker UUID.
# If you change this, well, it's going to be painful with Redis...
application.secret="a_unique_secret_long_enough"
cfp.hostname="cfp.devoxx.be"

application.langs="en,en-US,fr,fr-FR,fr-CA"
logger.root=ERROR
logger.play=INFO
logger.application=DEBUG

#smtp.host="in.mailjet.com"
#smtp.user="enter_here_the_mailjet_user"
#smtp.password="enter_password"
#smtp.ssl="no"
#smtp.port="587"
smtp.mock="yes"

mail.from="program@devoxx.com"
mail.committee.email="program@devoxx.com"
mail.bcc="nicolas.martignole@devoxx.fr"
mail.bugreport.recipient="nicolas.martignole@devoxx.fr"

# Github client https://github.com/settings/applications "Register a new application"
github.client_id="the_client_id"
github.client_secret="the_client_pasword"

# Google : register your application here https://cloud.google.com/console#/project
# Then open the Api & auth / Credentials page: https://cloud.google.com/console#/project/<PROJET_NAME>/apiui/credential
# Create a "New client ID" for this app > Choose "Web Application"
# Settings (when you run your server on localhost on port 9000) :
#    Authorized javascript origins : http://127.0.0.1:9000
#    Authorized redirect URI : http://127.0.0.1:9000/googleoauth2callback
# Then download the JSon and grab the client_id and client_secret
google.client_id="123456789010.apps.googleusercontent.com_found_in_json"
google.client_secret="210_super_password_found_in_json"

# Redis hosted on my server
# DO NOT USE the PROD server in Dev mode
redis.host="localhost"
redis.port=6364
redis.timeout=30000
redis.password="t4OgRgIb6JE3Bv@#9IVmhJ45LBm@tQQt@V%R"

actor.cronUpdater.active=true
actor.draftReminder.days=2

elasticsearch.host="http://buqj0uy3n-elasticsearch.services.clever-cloud.com:1810"

# ElasticSearch must not be public accessible, else anybody could fetch too much details
# about the CFP.
# You can either restrict by IP Address (this is what I did for DevoxxFR) with iptables
# Or you can set a username/password on a nginx gatewat (current setup for Devoxx BE)
# I recommend iptables if possible, as it's easier to set-up
elasticsearch.username=""
elasticsearch.password=""


# Trello
# generate a key here https://trello.com/1/appKey/generate


# Contexts used in library/Contexts.scala
# See http://www.playframework.com/documentation/2.2.0/ThreadPools
elasticsearch-context {
  fork-join-executor {
    parallelism-factor = 2.0
    parallelism-max = 10
  }
}
stats-context {
  fork-join-executor {
    parallelism-factor = 2.0
    parallelism-max = 10
  }
}

akka.jvm-exit-on-fatal-error=false

# For AngularJS schedule application
parsers.MultipartFormData.maxLength=10240K

# For auto issue submission
bitbucket.issues.url="https://bitbucket.org/api/1.0/repositories/<your_user>/<your_repo>/issues"
bitbucket.username="your_username"
bitbucket.token="your_token"

# Twitter wall only start ---------------------------------------
ws.useragent="Play2 Scala WS for CFP"
#ws.timeout.connection=-1
#ws.timeout=-1
# Connected forever on Twitter Stream
# See http://dev.twitter.com
# You have to create a Twitter application
twitter.consumerKey="HERE_Twitter_key"
twitter.consumerSecret="S8LtQQotNLBm79K6TuhqnS4UkaUJKEdeUAYcihy2iP9k5FmW7C"
# Twitter wall only end ---------------------------------------


goldenTicket.active=true

# Configure email digest trigger moments
# Daily is a 24h time setting, for example 08:00 or 17:00
digest.daily="08:00"
# Day of the week, Monday = 1, etc.
digest.weekly=1

conference.timezone="Europe/Brussels"

gluon.authorization="gluon test"
gluon.username="test"
gluon.password="test"

capgemini.username="test"
capgemini.password="test"
